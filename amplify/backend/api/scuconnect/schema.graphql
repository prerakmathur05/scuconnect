type Alumni @model @auth(rules: [{allow: public}]) {
  id: ID!
  graduationDate: AWSDate
  major: String
  degree: String
  isEmployed: String
  company: String
}

type Mentor @model @auth(rules: [{allow: public}]) {
  id: ID!
  graduationDate: AWSDateTime
  major: String
  degree: String
  isEmployed: String
  company: String
  Mentees: [Mentee] @hasMany(indexName: "byMentor", fields: ["id"])
}

type Mentee @model @auth(rules: [{allow: public}]) {
  id: ID!
  graduationDate: AWSDate
  major: String
  degree: String
  mentorID: ID! @index(name: "byMentor")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  phoneNumber: AWSPhone
  status: String
  type: String
  imageUri: String
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  ChatRooms: [ChatRoom] @manyToMany(relationName: "ChatRoomUser")
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  newMessages: Int
  ChatRoomUsers: [User] @manyToMany(relationName: "ChatRoomUser")
  Messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])
  LastMessage: Message @hasOne
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  imageUri: String
  docUri: String
  userID: ID! @index(name: "byUser")
  chatroomID: ID! @index(name: "byChatRoom")
}
